apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: ocp4x-collectd
  namespace: ocp4x-collectd
  labels:
    name: ocp4x-collectd
spec:
  selector:
    matchLabels:
      name: ocp4x-collectd
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: ocp4x-collectd
        component: collectd
    spec:
      serviceAccountName: ocp4x-collectd-sa
      hostNetwork: true
      nodeSelector:
         node-role.kubernetes.io/worker-ran: ""

      containers:
      - name: ocp4x-collectd
        image: docker.io/opnfv/barometer-collectd
        command:
        - "/run_collectd"
        securityContext:
          privileged: true
        resources: {}

        terminationMessagePolicy: FallbackToLogsOnError
        terminationMessagePath: /dev/termination-log

        volumeMounts:
        - mountPath: /config
          name: config
          readOnly: true
        - mountPath: /opt/collectd/etc/collectd.conf.d
          name: host-collectd-conf-d
          readOnly: true
        - mountPath: /var/run
          name: host-var-run
          readOnly: false
        - mountPath: /tmp
          name: host-tmp
          readOnly: false
        - mountPath: /var/lib/collectd
          name: host-var-lib-collectd
          readOnly: true
          # to run commands chroot in to the host
        - mountPath: /host
          name: host-slash
          readOnly: true
      volumes:
        - name: config
          configMap:
            name: ptp-config
        - name: collectd-conf-d
          hostPath:
            path: /opt/collectd/etc/collectd.conf.d
        - name: host-var-run
          hostPath:
            path: /var/run
        - name: host-tmp
          hostPath:
            path: /tmp
        - name: host-var-lib-collectd
          hostPath:
            path: /var/lib/collectd
        - name: host-slash
          hostPath:
            path: /

      terminationGracePeriodSeconds: 10

      restartPolicy: Always
      # tolerations:
      # - key: "node-role.kubernetes.io/master"
      #   operator: Exists
      #   effect: NoSchedule
      # - key: "node.kubernetes.io/not-ready"
      #   operator: Exists
      #   effect: NoSchedule
      # - key: node.kubernetes.io/network-unavailable
      #   operator: Exists
      #   effect: NoSchedule
